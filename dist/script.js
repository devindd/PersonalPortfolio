/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n  // ANIMATE MENU\n  $(function () {\n    setTimeout(function () {\n      $('#pre_title').fadeTo(1000, 1);\n    }, 4000);\n\n    $(function () {\n      setTimeout(function () {\n        $('#load_screen').fadeOut('slow');\n      }, 6000);\n    });\n  });\n\n  // PHOTO Before and After\n\n  (function () {\n    var imageReveal,\n        bind = function bind(fn, me) {\n      return function () {\n        return fn.apply(me, arguments);\n      };\n    };\n\n    imageReveal = function () {\n      function imageReveal(el) {\n        this.el = el;\n        this.moveSplit = bind(this.moveSplit, this);\n        this.calculateSplit = bind(this.calculateSplit, this);\n        this.resetReveal = bind(this.resetReveal, this);\n        this.startReveal = bind(this.startReveal, this);\n        this._bindEvents = bind(this._bindEvents, this);\n        this.overSlide = this.el.find('.js-over-slide');\n        this.overImage = this.el.find('.js-over-image');\n        this.divider = this.el.find('.js-divider');\n        console.log(this.el);\n        this._bindEvents();\n        this.resetReveal();\n      }\n\n      imageReveal.prototype._bindEvents = function () {\n        this.el.on('mouseenter', this.startReveal);\n        return this.el.on('mouseleave', this.resetReveal);\n      };\n\n      imageReveal.prototype.startReveal = function () {\n        console.log('start reveal');\n        return this.el.on('mousemove', this.calculateSplit);\n      };\n\n      imageReveal.prototype.resetReveal = function () {\n        var elMiddle;\n        console.log('reset');\n        this.el.off('mousemove', this.calculateSplit);\n        elMiddle = this.el.width() / 2;\n        return this.moveSplit(elMiddle);\n      };\n\n      imageReveal.prototype.calculateSplit = function (e) {\n        var elOffset;\n        elOffset = this.el.offset().left;\n        return this.moveSplit(e.pageX - elOffset);\n      };\n\n      imageReveal.prototype.moveSplit = function (offset) {\n        if (offset < 0) {\n          offset = 0;\n        }\n        console.log(offset);\n        this.overSlide.css('transform', 'translateX(' + offset + 'px)');\n        this.overImage.css('transform', 'translateX(-' + offset + 'px)');\n        return this.divider.css('transform', 'translateX(' + offset + 'px)');\n      };\n\n      return imageReveal;\n    }();\n\n    window.imageReveal = imageReveal;\n\n    $(function () {\n      return new imageReveal($('.js-image-reveal'));\n    });\n  }).call(this);\n\n  //counter\n\n  $.fn.jQuerySimpleCounter = function (options) {\n    var settings = $.extend({\n      start: 0,\n      end: 100,\n      easing: 'swing',\n      duration: 400,\n      complete: ''\n    }, options);\n\n    var thisElement = $(this);\n\n    $({ count: settings.start }).animate({ count: settings.end }, {\n      duration: settings.duration,\n      easing: settings.easing,\n      step: function step() {\n        var mathCount = Math.ceil(this.count);\n        thisElement.text(mathCount);\n      },\n      complete: settings.complete\n    });\n  };\n\n  setTimeout(function () {\n    $('#number1').jQuerySimpleCounter({ end: 12, duration: 7000 });\n  }, 6500);\n  setTimeout(function () {\n    $('#number2').jQuerySimpleCounter({ end: 55, duration: 7000 });\n  }, 6500);\n  setTimeout(function () {\n    $('#number3').jQuerySimpleCounter({ end: 359, duration: 7000 });\n  }, 6500);\n  setTimeout(function () {\n    $('#number4').jQuerySimpleCounter({ end: 246, duration: 7000 });\n  }, 6500);\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })
/******/ ]);